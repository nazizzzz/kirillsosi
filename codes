
import tkinter as tk
import random
from tkinter.font import Font
import pprint
import customtkinter as ctk
from PIL import Image, ImageTk


class MyFrame(ctk.CTkFrame):
    def __init__(self, master, **kwargs):
        super().__init__(master, **kwargs)

class App(ctk.CTk):
    def __init__(self):
        super().__init__()
        self.geometry("1280x720+320+180")
        self.resizable(False, False)
        self.grid_rowconfigure(0, weight=1)  # configure grid system
        self.grid_columnconfigure(0, weight=1)
        self.title('борщенкова саси')
        font = ctk.CTkFont(family='Century Gothic', size=25)
        ctk.set_appearance_mode("dark")  # Modes: system (default), light, dark
        ctk.set_default_color_theme("dark-blue")  # Themes: blue (default), dark-blue, green
        # ctk.set_appearance_mode("Light")

        self.sup_frame = MyFrame(master=self, width=400, height=700, corner_radius=0)
        self.sup_frame.grid(row=0, column=0, rowspan=4, sticky='nsew')

        self.supsup_frame = MyFrame(master=self, width=200, height=300)
        self.supsup_frame.grid(row=0, column=0, padx=20, pady=20)

        self.main_frame = MyFrame(master=self, width=1000, height=700, corner_radius=0)
        self.main_frame.grid(row=0, column=1, padx=20, pady=20)
        self.main_frame.grid_propagate(False)

        self.label = ctk.CTkLabel(self, text='Алгоритмы', font=font, bg_color='#2b2b2b')
        self.label.grid(row=0, column=0, sticky='n', pady=30)

        self.label1 = ctk.CTkLabel(self, text='RSA', font=font, bg_color='#2b2b2b')
        self.label1.grid(row=0, column=1, sticky='n', pady=30)
        @staticmethod
        def create_grid():
            obj_rsa =RSA()

            
        def btn_clr_chg(a: int):
            
            for wid in self.supsup_frame.winfo_children():
                    wid.configure(fg_color= 'grey')
            if a == 1:
                self.radiobutton_1.configure(fg_color='black')
                self.label1.configure(text=self.radiobutton_1.cget("text"))
                
            elif a == 2:
                self.radiobutton_2.configure(fg_color='black')
                self.label1.configure(text=self.radiobutton_2.cget("text"))
            elif a == 3:
                self.radiobutton_3.configure(fg_color='black')
                self.label1.configure(text=self.radiobutton_3.cget("text"))
            elif a == 4:
                self.radiobutton_4.configure(fg_color='black')
                self.label1.configure(text=self.radiobutton_4.cget("text"))
            create_grid()
            


        radio_var = tk.IntVar(value=0)
        self.radiobutton_1 = ctk.CTkButton(self.supsup_frame, text="RSA", font=font, height=50, width=190, fg_color='grey', text_color='white', corner_radius=5,  command=lambda x=1:btn_clr_chg(x))
        self.radiobutton_2 = ctk.CTkButton(self.supsup_frame, text="EGSA", font=font, height=50, width=190, fg_color='grey', text_color='white', corner_radius=5, command=lambda x=2:btn_clr_chg(x))
        self.radiobutton_3 = ctk.CTkButton(self.supsup_frame, text="DSA", font=font, height=50, width=190, fg_color='grey', text_color='white', corner_radius=5, command=lambda x=3:btn_clr_chg(x))
        self.radiobutton_4 = ctk.CTkButton(self.supsup_frame, text="ГОСТ 34.10-94", font=font, height=50, width=190, fg_color='grey', text_color='white', corner_radius=5, command=lambda x=4:btn_clr_chg(x))
        self.radiobutton_1.grid(row=0, column=0, sticky='wens', pady=20)
        self.radiobutton_2.grid(row=1, column=0, sticky='wens', pady=20)
        self.radiobutton_3.grid(row=2, column=0, sticky='wens', pady=20)
        self.radiobutton_4.grid(row=3, column=0, sticky='wens', pady=20)
        # self.supsup_frame.destroy()
        
class RSA(ctk.CTk):
    
    def __init__(self,*args,**kwargs):
        font1 = ctk.CTkFont(family='Century Gothic', size=18)
        self.label = ctk.CTkLabel(master=app.main_frame,font=font1,text='Большие простые числа p и q')
        self.label.grid(row=1, column =1 ,columnspan=2, sticky='n',pady=(60,0),padx=(50,0))
        self.entry1 =ctk.CTkEntry(master=app.main_frame,width=90,height=35,placeholder_text='p:')
        self.entry1.grid(row=2, column=1, sticky='n',padx=(10,0))
        self.entry2 =ctk.CTkEntry(master=app.main_frame,width=90,height=35,placeholder_text='q:')
        self.entry2.grid(row=2, column=2, sticky='nw')
        self.label1 = ctk.CTkLabel(master=app.main_frame,font=font1,text='Большие простые числа p и q')
        self.label1.grid(row=1, column=3, sticky='n', pady=(60,0),padx=(30,0))
        
    def delete(self):
        del(self)

        
app = App()

app.mainloop()
